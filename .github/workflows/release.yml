name: Maven Release

# Performs a Maven release using JDK 17 when a new GitHub release has been published
on:
  release:
    types: [ published ]

jobs:
  publish:
    name: Maven Artifact Publisher
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ "17" ]
        maven: [ "3.8.6" ]
        jdk: [ "temurin" ]
    steps:
      - name: Check out source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          cache: maven
          distribution: ${{ matrix.jdk }}
          java-version: ${{ matrix.java }}
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Set up Maven if needed
        uses: stCarolas/setup-maven@417e1a9899611c0350621d1fb0c2770f35105c69 # v4.4
        if: ${{ env.ACT }}
        with:
          maven-version: ${{ matrix.maven }}

      - name: Set autorelease config
        if: env.AUTORELEASE_ARTIFACT == null
        run: echo "AUTORELEASE_ARTIFACT=false" >> $GITHUB_ENV

      - name: Release with Maven
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.BUILD_PASSPHRASE }}
          MAVEN_GPG_KEY: ${{ secrets.BUILD_KEY }}
        run: |
          mvn -B -ntp -DlogLevel=DEBUG -DtestLogLevel=DEBUG -Drevision=${{ github.event.release.tag_name }} \
          -Prelease deploy
